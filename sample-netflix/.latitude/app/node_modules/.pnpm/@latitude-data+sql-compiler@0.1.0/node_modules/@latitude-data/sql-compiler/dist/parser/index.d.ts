import type CompileError from '../error/error';
import { type Fragment, type TemplateNode } from './interfaces';
export default function parse(template: string): Fragment;
export declare class Parser {
    template: string;
    index: number;
    stack: TemplateNode[];
    constructor(template: string);
    parse(): Fragment;
    current(): TemplateNode;
    match(str: string): boolean;
    allowWhitespace(): void;
    requireWhitespace(): void;
    eat(str: string, required?: boolean, error?: {
        code: string;
        message: string;
    }): boolean;
    error({ code, message }: {
        code: string;
        message: string;
    }, index?: number): void;
    acornError(err: CompileError): void;
    matchRegex(pattern: RegExp): string | null;
    read(pattern: RegExp): string | null;
    readIdentifier(allowReserved?: boolean): string | null;
}
//# sourceMappingURL=index.d.ts.map