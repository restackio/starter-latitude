type CompilerAttrs = {
    query: string;
    resolveFn: ResolveFn;
    supportedMethods?: Record<string, SupportedMethod>;
};
export type SupportedMethod = <T extends boolean>(interpolation: T, ...args: unknown[]) => Promise<T extends true ? string : unknown>;
export type ResolveFn = (value: unknown) => Promise<string>;
export declare class Compiler {
    private sql;
    private supportedMethods;
    private resolveFn;
    private varStash;
    private readFromStash;
    private addToStash;
    private modifyStash;
    constructor({ query, resolveFn, supportedMethods }: CompilerAttrs);
    compile(): Promise<string>;
    private parseBaseNode;
    private parseLogicNode;
    private resolveLogicNodeExpression;
    private parseBaseNodeChildren;
    private baseNodeError;
    private expressionError;
    private handleFunction;
}
export {};
//# sourceMappingURL=index.d.ts.map