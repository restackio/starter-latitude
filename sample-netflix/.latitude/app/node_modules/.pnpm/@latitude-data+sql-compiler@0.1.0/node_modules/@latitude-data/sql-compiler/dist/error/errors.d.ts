declare const _default: {
    unexpectedEof: {
        code: string;
        message: string;
    };
    unexpectedEofToken: (token: string) => {
        code: string;
        message: string;
    };
    unexpectedToken: (token: string) => {
        code: string;
        message: string;
    };
    unexpectedBlockClose: {
        code: string;
        message: string;
    };
    invalidElseif: {
        code: string;
        message: string;
    };
    invalidElseifPlacementUnclosedBlock: (block: string) => {
        code: string;
        message: string;
    };
    invalidElseifPlacementOutsideIf: {
        code: string;
        message: string;
    };
    invalidElsePlacementUnclosedBlock: (block: string) => {
        code: string;
        message: string;
    };
    invalidElsePlacementOutsideIf: {
        code: string;
        message: string;
    };
    expectedBlockType: {
        code: string;
        message: string;
    };
    unexpectedTokenDestructure: {
        code: string;
        message: string;
    };
    expectedName: {
        code: string;
        message: string;
    };
    unexpectedMustacheCloseTag: {
        code: string;
        message: string;
    };
    unexpectedEndOfComment: {
        code: string;
        message: string;
    };
    queryNotFound: (name: string) => {
        code: string;
        message: string;
    };
    unsupportedBaseNodeType: (type: string) => {
        code: string;
        message: string;
    };
    unsupportedExpressionType: (type: string) => {
        code: string;
        message: string;
    };
    invalidConstantDefinition: {
        code: string;
        message: string;
    };
    variableAlreadyDeclared: (name: string) => {
        code: string;
        message: string;
    };
    variableNotDeclared: (name: string) => {
        code: string;
        message: string;
    };
    invalidObjectKey: {
        code: string;
        message: string;
    };
    unsupportedOperator: (operator: string) => {
        code: string;
        message: string;
    };
    constantReassignment: {
        code: string;
        message: string;
    };
    unknownFunction: (name: string) => {
        code: string;
        message: string;
    };
    functionCallError: (name: string, message: string) => {
        code: string;
        message: string;
    };
    invalidFunctionResultInterpolation: {
        code: string;
        message: string;
    };
};
export default _default;
//# sourceMappingURL=errors.d.ts.map