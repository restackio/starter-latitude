/// <reference types=".pnpm/svelte@4.2.7/node_modules/svelte" />
import { SvelteComponent } from "svelte";
import type { ECBasicOption } from 'echarts/types/dist/shared';
type EchartsOptions = ECBasicOption;
type Locale = 'en' | 'es';
type EchartsTheme = object;
export type Props = {
    options: EchartsOptions | null | undefined;
    width?: number;
    height?: number;
    locale?: Locale;
};
declare const __propDef: {
    props: {
        options: Props['options'];
        width?: Props['width'];
        height?: Props['height'];
        locale?: Props['locale'];
        chartable?: ((element: HTMLElement, { options, theme, locale }: {
            options: EchartsOptions;
            theme: EchartsTheme;
            locale: Locale | undefined;
        }) => {
            update({ options: newOptions }: {
                options: EchartsOptions;
                theme: EchartsTheme;
                locale: Locale | undefined;
            }): void;
            destroy(): void;
        }) | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type EchartsProps = typeof __propDef.props;
export type EchartsEvents = typeof __propDef.events;
export type EchartsSlots = typeof __propDef.slots;
export default class Echarts extends SvelteComponent<EchartsProps, EchartsEvents, EchartsSlots> {
    get chartable(): (element: HTMLElement, { options, theme, locale }: {
        options: ECBasicOption;
        theme: object;
        locale: Locale | undefined;
    }) => {
        update({ options: newOptions }: {
            options: ECBasicOption;
            theme: object;
            locale: Locale | undefined;
        }): void;
        destroy(): void;
    };
}
export {};
