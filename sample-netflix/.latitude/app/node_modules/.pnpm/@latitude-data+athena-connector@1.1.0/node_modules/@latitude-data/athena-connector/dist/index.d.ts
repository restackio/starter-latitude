import { BaseConnector, CompiledQuery, ResolvedParam } from '@latitude-data/base-connector';
import QueryResult from '@latitude-data/query_result';
interface AthenaQueryClientConfig {
    client: {
        region?: string;
        credentials?: {
            accessKeyId: string;
            secretAccessKey: string;
        };
    };
    database: string;
    catalog: string;
    workgroup: string;
    resultReuseConfiguration?: {
        ResultReuseByAgeConfiguration: {
            Enabled: boolean;
            MaxAgeInMinutes?: number;
        };
    };
}
export type ConnectionParams = AthenaQueryClientConfig;
export declare class AthenaConnector extends BaseConnector {
    private client;
    private database;
    private catalog;
    private workgroup;
    private resultReuseConfiguration;
    constructor(rootPath: string, connectionParams: ConnectionParams);
    resolve(value: unknown, _: number): ResolvedParam;
    runQuery(query: CompiledQuery): Promise<QueryResult>;
    private buildQueryParams;
    private checkQueryExequtionStateAndGetData;
    private convertDataType;
}
export {};
//# sourceMappingURL=index.d.ts.map