{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  BaseConnector,\n  ConnectionError,\n  QueryError,\n  CompiledQuery,\n  ResolvedParam,\n} from '@latitude-data/base-connector'\nimport QueryResult, { DataType } from '@latitude-data/query_result'\nimport pg from 'pg'\nimport { readFileSync } from 'fs'\n\nconst { Pool, types: pgtypes } = pg\n\ntype SSLConfig = {\n  sslmode?: 'allow' | 'prefer' | 'require' | 'verify-ca' | 'verify-full'\n  ca?: string\n  key?: string\n  cert?: string\n  rejectUnauthorized?: boolean\n}\n\nexport type ConnectionParams = {\n  database: string\n  user: string\n  password: string\n  host: string\n  port: number\n  schema?: string\n  ssl?: boolean | SSLConfig\n}\n\nexport class PostgresConnector extends BaseConnector {\n  private pool\n\n  constructor(rootPath: string, connectionParams: ConnectionParams) {\n    super(rootPath)\n\n    this.pool = new Pool(this.buildConnectionParams(connectionParams))\n\n    if (connectionParams.schema) {\n      this.pool.on('connect', (client) => {\n        client.query(`SET search_path TO ${connectionParams.schema}`)\n      })\n    }\n  }\n\n  resolve(value: unknown, index: number): ResolvedParam {\n    /**\n     * The pg library parameterises variables as $i where i is an increasing number starting\n     * from 1, for regular variables, and $i::text for strings.\n     */\n    const isText = typeof value === 'string'\n    const suffix = isText ? '::text' : ''\n    return {\n      value,\n      resolvedAs: `$${index + 1}${suffix}`,\n    }\n  }\n\n  async runQuery(request: CompiledQuery): Promise<QueryResult> {\n    const client = await this.createClient()\n\n    try {\n      const result = await client.query({\n        text: request.sql,\n        values: request.params.map((param) => param.value),\n      })\n\n      return new QueryResult({\n        rowCount: result.rowCount || 0,\n        fields: result.fields.map((field) => ({\n          name: field.name,\n          type: this.convertDataType(field.dataTypeID),\n        })),\n        rows: result.rows.map((row) => Object.values(row)),\n      })\n    } catch (error) {\n      const errorObj = error as pg.DatabaseError\n      throw new QueryError(errorObj.message, errorObj)\n    } finally {\n      client.release()\n    }\n  }\n\n  private async createClient() {\n    try {\n      return await this.pool.connect()\n    } catch (error: unknown) {\n      const errorObj = error as Error\n      throw new ConnectionError(errorObj.message, errorObj)\n    }\n  }\n\n  private convertDataType(\n    dataTypeID: number,\n    fallbackType = DataType.Unknown,\n  ): DataType {\n    switch (dataTypeID) {\n      case pgtypes.builtins.BOOL:\n        return DataType.Boolean\n\n      case pgtypes.builtins.NUMERIC:\n      case pgtypes.builtins.MONEY:\n      case pgtypes.builtins.INT2:\n      case pgtypes.builtins.INT4:\n      case pgtypes.builtins.INT8:\n        return DataType.Integer\n\n      case pgtypes.builtins.FLOAT4:\n      case pgtypes.builtins.FLOAT8:\n        return DataType.Float\n\n      case pgtypes.builtins.VARCHAR:\n      case pgtypes.builtins.TEXT:\n      case pgtypes.builtins.CHAR:\n      case pgtypes.builtins.JSON:\n      case pgtypes.builtins.XML:\n        return DataType.String\n\n      case pgtypes.builtins.DATE:\n      case pgtypes.builtins.TIME:\n      case pgtypes.builtins.TIMETZ:\n      case pgtypes.builtins.TIMESTAMP:\n      case pgtypes.builtins.TIMESTAMPTZ:\n        return DataType.Datetime\n\n      default:\n        return fallbackType\n    }\n  }\n\n  private buildConnectionParams(params: ConnectionParams): ConnectionParams {\n    const payload = {\n      ...params,\n      ssl:\n        params.ssl !== undefined ? this.buildSSLConfig(params.ssl) : undefined,\n    }\n\n    return this.compact(payload) as ConnectionParams\n  }\n\n  private buildSSLConfig(ssl: boolean | SSLConfig) {\n    if (typeof ssl === 'boolean') {\n      return ssl\n    }\n\n    const { sslmode, ca, key, cert, rejectUnauthorized } = ssl\n    const payload = {\n      sslmode,\n      rejectUnauthorized,\n      ca: ca ? this.readSecureFile(ca) : undefined,\n      key: key ? this.readSecureFile(key) : undefined,\n      cert: cert ? this.readSecureFile(cert) : undefined,\n    }\n\n    return this.compact(payload)\n  }\n\n  private readSecureFile(filePath: string) {\n    try {\n      return readFileSync(filePath).toString()\n    } catch (error) {\n      throw new Error(\n        `Failed to read file at ${filePath}: ${(error as Error).message}`,\n      )\n    }\n  }\n\n  private compact(obj: Record<string, unknown>) {\n    return Object.fromEntries(\n      Object.entries(obj).filter(([, value]) => value !== undefined),\n    )\n  }\n}\n"],"names":[],"mappings":"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"}