import { BaseConnector, CompiledQuery, ResolvedParam } from '@latitude-data/base-connector';
import QueryResult from '@latitude-data/query_result';
type SSLConfig = {
    sslmode?: 'allow' | 'prefer' | 'require' | 'verify-ca' | 'verify-full';
    ca?: string;
    key?: string;
    cert?: string;
    rejectUnauthorized?: boolean;
};
export type ConnectionParams = {
    database: string;
    user: string;
    password: string;
    host: string;
    port: number;
    schema?: string;
    ssl?: boolean | SSLConfig;
};
export declare class PostgresConnector extends BaseConnector {
    private pool;
    constructor(rootPath: string, connectionParams: ConnectionParams);
    resolve(value: unknown, index: number): ResolvedParam;
    runQuery(request: CompiledQuery): Promise<QueryResult>;
    private createClient;
    private convertDataType;
    private buildConnectionParams;
    private buildSSLConfig;
    private readSecureFile;
    private compact;
}
export {};
//# sourceMappingURL=index.d.ts.map