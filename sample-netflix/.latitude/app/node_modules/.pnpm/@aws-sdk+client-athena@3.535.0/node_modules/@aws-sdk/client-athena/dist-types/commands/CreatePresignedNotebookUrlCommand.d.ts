import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AthenaClient";
import { CreatePresignedNotebookUrlRequest, CreatePresignedNotebookUrlResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link CreatePresignedNotebookUrlCommand}.
 */
export interface CreatePresignedNotebookUrlCommandInput extends CreatePresignedNotebookUrlRequest {
}
/**
 * @public
 *
 * The output of {@link CreatePresignedNotebookUrlCommand}.
 */
export interface CreatePresignedNotebookUrlCommandOutput extends CreatePresignedNotebookUrlResponse, __MetadataBearer {
}
declare const CreatePresignedNotebookUrlCommand_base: {
    new (input: CreatePresignedNotebookUrlCommandInput): import("@smithy/smithy-client").CommandImpl<CreatePresignedNotebookUrlCommandInput, CreatePresignedNotebookUrlCommandOutput, AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: CreatePresignedNotebookUrlCommandInput): import("@smithy/smithy-client").CommandImpl<CreatePresignedNotebookUrlCommandInput, CreatePresignedNotebookUrlCommandOutput, AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Gets an authentication token and the URL at which the notebook can be accessed. During
 *             programmatic access, <code>CreatePresignedNotebookUrl</code> must be called every 10
 *             minutes to refresh the authentication token. For information about granting programmatic
 *             access, see <a href="https://docs.aws.amazon.com/athena/latest/ug/setting-up.html#setting-up-grant-programmatic-access">Grant
 *                 programmatic access</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AthenaClient, CreatePresignedNotebookUrlCommand } from "@aws-sdk/client-athena"; // ES Modules import
 * // const { AthenaClient, CreatePresignedNotebookUrlCommand } = require("@aws-sdk/client-athena"); // CommonJS import
 * const client = new AthenaClient(config);
 * const input = { // CreatePresignedNotebookUrlRequest
 *   SessionId: "STRING_VALUE", // required
 * };
 * const command = new CreatePresignedNotebookUrlCommand(input);
 * const response = await client.send(command);
 * // { // CreatePresignedNotebookUrlResponse
 * //   NotebookUrl: "STRING_VALUE", // required
 * //   AuthToken: "STRING_VALUE", // required
 * //   AuthTokenExpirationTime: Number("long"), // required
 * // };
 *
 * ```
 *
 * @param CreatePresignedNotebookUrlCommandInput - {@link CreatePresignedNotebookUrlCommandInput}
 * @returns {@link CreatePresignedNotebookUrlCommandOutput}
 * @see {@link CreatePresignedNotebookUrlCommandInput} for command's `input` shape.
 * @see {@link CreatePresignedNotebookUrlCommandOutput} for command's `response` shape.
 * @see {@link AthenaClientResolvedConfig | config} for AthenaClient's `config` shape.
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>Indicates a platform issue, which may be due to a transient condition or
 *             outage.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>Indicates that something is wrong with the input to the request. For example, a
 *             required parameter may be missing or out of range.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>A resource, such as a workgroup, was not found.</p>
 *
 * @throws {@link AthenaServiceException}
 * <p>Base exception class for all service exceptions from Athena service.</p>
 *
 * @public
 */
export declare class CreatePresignedNotebookUrlCommand extends CreatePresignedNotebookUrlCommand_base {
}
