import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AthenaClient";
import { PutCapacityAssignmentConfigurationInput, PutCapacityAssignmentConfigurationOutput } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link PutCapacityAssignmentConfigurationCommand}.
 */
export interface PutCapacityAssignmentConfigurationCommandInput extends PutCapacityAssignmentConfigurationInput {
}
/**
 * @public
 *
 * The output of {@link PutCapacityAssignmentConfigurationCommand}.
 */
export interface PutCapacityAssignmentConfigurationCommandOutput extends PutCapacityAssignmentConfigurationOutput, __MetadataBearer {
}
declare const PutCapacityAssignmentConfigurationCommand_base: {
    new (input: PutCapacityAssignmentConfigurationCommandInput): import("@smithy/smithy-client").CommandImpl<PutCapacityAssignmentConfigurationCommandInput, PutCapacityAssignmentConfigurationCommandOutput, AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: PutCapacityAssignmentConfigurationCommandInput): import("@smithy/smithy-client").CommandImpl<PutCapacityAssignmentConfigurationCommandInput, PutCapacityAssignmentConfigurationCommandOutput, AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Puts a new capacity assignment configuration for a specified capacity reservation. If
 *             a capacity assignment configuration already exists for the capacity reservation,
 *             replaces the existing capacity assignment configuration.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AthenaClient, PutCapacityAssignmentConfigurationCommand } from "@aws-sdk/client-athena"; // ES Modules import
 * // const { AthenaClient, PutCapacityAssignmentConfigurationCommand } = require("@aws-sdk/client-athena"); // CommonJS import
 * const client = new AthenaClient(config);
 * const input = { // PutCapacityAssignmentConfigurationInput
 *   CapacityReservationName: "STRING_VALUE", // required
 *   CapacityAssignments: [ // CapacityAssignmentsList // required
 *     { // CapacityAssignment
 *       WorkGroupNames: [ // WorkGroupNamesList
 *         "STRING_VALUE",
 *       ],
 *     },
 *   ],
 * };
 * const command = new PutCapacityAssignmentConfigurationCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param PutCapacityAssignmentConfigurationCommandInput - {@link PutCapacityAssignmentConfigurationCommandInput}
 * @returns {@link PutCapacityAssignmentConfigurationCommandOutput}
 * @see {@link PutCapacityAssignmentConfigurationCommandInput} for command's `input` shape.
 * @see {@link PutCapacityAssignmentConfigurationCommandOutput} for command's `response` shape.
 * @see {@link AthenaClientResolvedConfig | config} for AthenaClient's `config` shape.
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>Indicates a platform issue, which may be due to a transient condition or
 *             outage.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>Indicates that something is wrong with the input to the request. For example, a
 *             required parameter may be missing or out of range.</p>
 *
 * @throws {@link AthenaServiceException}
 * <p>Base exception class for all service exceptions from Athena service.</p>
 *
 * @public
 */
export declare class PutCapacityAssignmentConfigurationCommand extends PutCapacityAssignmentConfigurationCommand_base {
}
