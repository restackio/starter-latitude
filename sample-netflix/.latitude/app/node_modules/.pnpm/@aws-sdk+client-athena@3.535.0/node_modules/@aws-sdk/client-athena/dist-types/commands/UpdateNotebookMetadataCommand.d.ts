import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AthenaClient";
import { UpdateNotebookMetadataInput, UpdateNotebookMetadataOutput } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link UpdateNotebookMetadataCommand}.
 */
export interface UpdateNotebookMetadataCommandInput extends UpdateNotebookMetadataInput {
}
/**
 * @public
 *
 * The output of {@link UpdateNotebookMetadataCommand}.
 */
export interface UpdateNotebookMetadataCommandOutput extends UpdateNotebookMetadataOutput, __MetadataBearer {
}
declare const UpdateNotebookMetadataCommand_base: {
    new (input: UpdateNotebookMetadataCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateNotebookMetadataCommandInput, UpdateNotebookMetadataCommandOutput, AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: UpdateNotebookMetadataCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateNotebookMetadataCommandInput, UpdateNotebookMetadataCommandOutput, AthenaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Updates the metadata for a notebook.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AthenaClient, UpdateNotebookMetadataCommand } from "@aws-sdk/client-athena"; // ES Modules import
 * // const { AthenaClient, UpdateNotebookMetadataCommand } = require("@aws-sdk/client-athena"); // CommonJS import
 * const client = new AthenaClient(config);
 * const input = { // UpdateNotebookMetadataInput
 *   NotebookId: "STRING_VALUE", // required
 *   ClientRequestToken: "STRING_VALUE",
 *   Name: "STRING_VALUE", // required
 * };
 * const command = new UpdateNotebookMetadataCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param UpdateNotebookMetadataCommandInput - {@link UpdateNotebookMetadataCommandInput}
 * @returns {@link UpdateNotebookMetadataCommandOutput}
 * @see {@link UpdateNotebookMetadataCommandInput} for command's `input` shape.
 * @see {@link UpdateNotebookMetadataCommandOutput} for command's `response` shape.
 * @see {@link AthenaClientResolvedConfig | config} for AthenaClient's `config` shape.
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>Indicates a platform issue, which may be due to a transient condition or
 *             outage.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>Indicates that something is wrong with the input to the request. For example, a
 *             required parameter may be missing or out of range.</p>
 *
 * @throws {@link TooManyRequestsException} (client fault)
 *  <p>Indicates that the request was throttled.</p>
 *
 * @throws {@link AthenaServiceException}
 * <p>Base exception class for all service exceptions from Athena service.</p>
 *
 * @public
 */
export declare class UpdateNotebookMetadataCommand extends UpdateNotebookMetadataCommand_base {
}
