import { type VariantProps as TailwindVariantProps } from 'tailwind-variants';
export declare enum ToggleVariant {
    Default = "default",
    Outline = "outline"
}
export declare enum ToggleSize {
    Default = "default",
    Sm = "sm",
    Lg = "lg"
}
export declare const TOGGLE_VARIANTS: ToggleVariant[];
export declare const TOGGLE_SIZES: ToggleSize[];
export type VariantProps = TailwindVariantProps<typeof toggleVariants>;
export type Variant = VariantProps["variant"];
export type Size = VariantProps["size"];
export declare const toggleVariants: import("tailwind-variants").TVReturnType<{
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}, undefined, "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground", import("tailwind-variants/dist/config").TVConfig<{
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}, {
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}>, {
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}, undefined, "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground", import("tailwind-variants/dist/config").TVConfig<{
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}, {
    variant: {
        default: string;
        outline: string;
    };
    size: {
        default: string;
        sm: string;
        lg: string;
    };
}>, unknown, unknown, undefined>>;
type ClassProps = {
    variant: Variant;
    size: Size;
    className?: string | null | undefined;
};
export declare function cssClass({ variant, size, className }: ClassProps): string;
export {};
//# sourceMappingURL=index.d.ts.map