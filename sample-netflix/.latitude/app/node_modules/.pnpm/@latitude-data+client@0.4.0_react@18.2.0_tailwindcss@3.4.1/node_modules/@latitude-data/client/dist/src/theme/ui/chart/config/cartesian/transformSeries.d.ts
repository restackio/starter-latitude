import { Dataset, DBSource } from '../../types';
import { ConfigProps, FullColumn, yAxisFormat } from './types';
export declare function findLongestValue(source: DBSource, sourceIndex: number): string;
export type AxisMetadata = {
    longestValue: string;
    seriesNames: string[];
};
export default function transformCartesiansSeries({ swapAxis, yAxis, xColumns, yColumns, dataset, hiddenSeries, config, datasetIndex }: {
    xColumns: FullColumn[];
    yColumns: FullColumn[];
    yAxis: yAxisFormat[];
    swapAxis: boolean;
    dataset: Dataset;
    hiddenSeries: string[];
    config: ConfigProps;
    datasetIndex: number;
}): {
    series: (import("echarts/types/dist/echarts").LineSeriesOption | import("echarts/types/dist/echarts").BarSeriesOption | import("echarts/types/dist/echarts").ScatterSeriesOption)[];
    axisMetadata: Record<number, AxisMetadata>;
};
//# sourceMappingURL=transformSeries.d.ts.map