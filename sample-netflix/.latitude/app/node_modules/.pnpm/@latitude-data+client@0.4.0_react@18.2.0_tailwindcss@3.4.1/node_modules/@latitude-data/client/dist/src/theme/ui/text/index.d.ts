import { FontWeight, TextColor } from '../tokens';
export declare const families: {
    sans: string;
    serif: string;
};
export declare const leadings: {
    h1: string;
    h2: string;
    h3: string;
    h4: string;
    h5: string;
    h6: string;
    none: string;
};
export declare const sizes: {
    h1: string;
    h2: string;
    h3: string;
    h4: string;
    h5: string;
    h6: string;
};
export declare const spacings: {
    normal: string;
    wide: string;
};
export declare const alignments: {
    left: string;
    center: string;
    right: string;
};
export declare const wordBreaks: {
    normal: string;
    breakWord: string;
    breakAll: string;
};
export declare const whiteSpaces: {
    normal: string;
    nowrap: string;
    pre: string;
    preLine: string;
    preWrap: string;
};
export type FontSize = keyof typeof sizes;
export type LetterSpacing = keyof typeof spacings;
export type TextAlign = keyof typeof alignments;
export type WordBreak = keyof typeof wordBreaks;
export type WhiteSpace = keyof typeof whiteSpaces;
export type LineHeight = keyof typeof leadings;
export type FontFamily = keyof typeof families;
export type TextProps = {
    as?: 'p' | 'span' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
    capitalize?: boolean;
    class?: string | undefined | null;
    centered?: boolean;
    color?: TextColor;
    ellipsis?: boolean;
    lineThrough?: boolean;
    noWrap?: boolean;
    leading?: LineHeight;
    size?: FontSize;
    family?: FontFamily;
    underline?: boolean;
    uppercase?: boolean;
    userSelect?: boolean;
    spacing?: LetterSpacing;
    weight?: FontWeight;
    whiteSpace?: WhiteSpace;
    wordBreak?: WordBreak;
    align?: TextAlign;
};
export type HeaderProps = Omit<TextProps, 'size' | 'leading' | 'as'>;
export declare function cssClass({ family, capitalize, centered, class: className, size, leading, color, ellipsis, lineThrough, underline, uppercase, align, spacing, weight, whiteSpace, wordBreak, }: TextProps): string;
//# sourceMappingURL=index.d.ts.map