import type { XAXisComponentOption, YAXisComponentOption } from 'echarts';
import { Dataset } from '../../types';
import { AxisMetadata } from './transformSeries';
import { FullColumn, xAxisFormat, yAxisFormat } from './types';
type Axis<O> = O extends 'y' ? YAXisComponentOption : XAXisComponentOption;
export declare function transformXAxis({ dataset, axisList, xColumns, yColumns, swapAxis, xTitle, }: {
    dataset: Dataset;
    axisList: xAxisFormat[];
    xColumns: FullColumn[];
    yColumns: FullColumn[];
    swapAxis: boolean;
    xTitle?: string;
}): Axis<'x'> | null;
export declare function transformYAxis({ axisList, swapAxis, axisMetadata, yTitle, }: {
    axisList: yAxisFormat[];
    swapAxis: boolean;
    axisMetadata: Record<string, AxisMetadata>;
    dataset: Dataset;
    yTitle?: string;
}): Axis<'y'>[];
export {};
//# sourceMappingURL=transformAxis.d.ts.map