import QueryResult from '@latitude-data/query_result';
export declare const FORCE_REFETCH_PARAMETER = "__force";
type QueryRequest = {
    queryPath: string;
    params?: Record<string, unknown>;
};
export declare const createQueryKey: (queryPath: string, params: Record<string, unknown>) => string;
export interface QueryResultState {
    isLoading: boolean;
    data?: QueryResult | null;
    error?: Error | null;
}
interface StoreState {
    queries: Record<string, QueryResultState>;
    fetch: (request: QueryRequest) => Promise<void>;
    forceRefetch: (request: QueryRequest) => Promise<void>;
}
export declare const store: import("zustand/vanilla").StoreApi<StoreState>;
export declare const useFetchQuery: (queryPath: string, params?: Record<string, unknown>) => () => void;
export declare const useRunQuery: (queryPath: string, params: Record<string, unknown>) => void;
export {};
//# sourceMappingURL=queries.d.ts.map