import { DBSource } from '../../../types';
export declare const FONT_FAMILY = "Inter var,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",Segoe UI Symbol,\"Noto Color Emoji\"";
export declare const FIELDS: string[];
export declare const SOURCE: DBSource;
export declare const DATASET: {
    fields: string[];
    source: DBSource;
};
export declare const testData: {
    animation: boolean;
    animationEasing: string;
    animationEasingUpdate: string;
    dataset: {
        dimensions: string[];
        source: import("../../../types").DBSourceRow[];
    }[];
    xAxis: {
        show: boolean;
        boundaryGap: boolean;
        type: string;
        name: string;
        nameLocation: string;
        nameRotate: number;
        nameTextStyle: {
            fontFamily: string;
            color: string;
            fontSize: number;
            lineHeight: number;
            fontWeight: number;
            verticalAlign: string;
            align: string;
        };
        nameGap: number;
        position: string;
        axisLine: {
            show: boolean;
            lineStyle: {
                color: string;
            };
        };
        axisTick: {
            show: boolean;
        };
        splitLine: {
            show: boolean;
            lineStyle: {
                color: string;
            };
        };
        axisPointer: {
            label: {
                show: boolean;
                formatter: string;
            };
        };
        axisLabel: {
            showMaxLabel: boolean;
            fontFamily: string;
            color: string;
            fontSize: number;
            lineHeight: number;
            fontWeight: number;
            show: boolean;
            rotate: number;
            formatter: string;
            width: number;
            overflow: string;
        };
    }[];
    yAxis: {
        show: boolean;
        boundaryGap: number;
        type: string;
        name: string;
        nameLocation: string;
        nameRotate: number;
        nameTextStyle: {
            fontFamily: string;
            color: string;
            fontSize: number;
            lineHeight: number;
            fontWeight: number;
            verticalAlign: string;
            align: string;
        };
        nameGap: number;
        position: string;
        axisLine: {
            show: boolean;
            lineStyle: {
                color: string;
            };
        };
        axisTick: {
            show: boolean;
        };
        splitLine: {
            show: boolean;
            lineStyle: {
                color: string;
            };
        };
        axisPointer: {
            label: {
                show: boolean;
                formatter: string;
            };
        };
        axisLabel: {
            showMaxLabel: boolean;
            fontFamily: string;
            color: string;
            fontSize: number;
            lineHeight: number;
            fontWeight: number;
            show: boolean;
            rotate: number;
            formatter: string;
            width: number;
            overflow: string;
        };
    }[];
    series: {
        type: string;
        name: string;
        showSymbol: boolean;
        areaStyle: {
            opacity: number;
        };
        connectNulls: boolean;
        label: {
            position: string;
            show: boolean;
            formatter: string;
        };
        datasetIndex: number;
        encode: {
            x: string;
            y: string;
        };
    }[];
    dataZoom: never[];
    aria: {
        enabled: boolean;
        decal: {
            show: boolean;
        };
    };
    tooltip: {
        confine: boolean;
        order: string;
        trigger: string;
        axisPointer: {
            type: string;
        };
    };
    legend: {
        type: string;
        show: boolean;
        align: string;
        left: number;
    };
    grid: {
        containLabel: boolean;
        left: number;
        right: number;
        top: number;
        bottom: number;
    };
};
//# sourceMappingURL=data.d.ts.map