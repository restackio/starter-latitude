import { type VariantProps } from 'tailwind-variants';
type CardType = VariantProps<typeof cardRootVariants>['type'];
declare const cardRootVariants: import("tailwind-variants").TVReturnType<{
    type: {
        normal: string;
        invisible: string;
    };
}, undefined, "rounded-xl bg-card text-card-foreground ", import("tailwind-variants/dist/config").TVConfig<{
    type: {
        normal: string;
        invisible: string;
    };
}, {
    type: {
        normal: string;
        invisible: string;
    };
}>, {
    type: {
        normal: string;
        invisible: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    type: {
        normal: string;
        invisible: string;
    };
}, undefined, "rounded-xl bg-card text-card-foreground ", import("tailwind-variants/dist/config").TVConfig<{
    type: {
        normal: string;
        invisible: string;
    };
}, {
    type: {
        normal: string;
        invisible: string;
    };
}>, unknown, unknown, undefined>>;
type ClassProps = {
    className?: string | null | undefined;
};
export type CardProps = ClassProps & {
    type?: CardType;
};
export declare function rootCssClass({ type, className }: CardProps): string;
export declare function headerCssClass({ type, className }: CardProps): string;
export declare function titleCssClass({ className }: ClassProps): string;
export declare function descriptionCssClass({ className }: ClassProps): string;
export declare function contentCssClass({ type, className }: CardProps): string;
export declare function footerCssClass({ className }: ClassProps): string;
export {};
//# sourceMappingURL=index.d.ts.map