export declare enum RelativeDate {
    Now = "_NOW_",
    Today = "_TODAY_",
    Tomorrow = "_TOMORROW_",
    Yesterday = "_YESTERDAY_",
    OneWeekAgo = "_ONE_WEEK_AGO_",
    TwoWeeksAgo = "_TWO_WEEKS_AGO_",
    OneWeekFromNow = "_ONE_WEEK_FROM_NOW_",
    OneMonthAgo = "_ONE_MONTH_AGO_",
    OneMonthFromNow = "_ONE_MONTH_FROM_NOW_",
    OneYearAgo = "_ONE_YEAR_AGO_",
    StartOfThisWeek = "_START_OF_THIS_WEEK_",
    StartOfNextWeek = "_START_OF_NEXT_WEEK_",
    StartOfLastWeek = "_START_OF_LAST_WEEK_",
    StartOfThisMonth = "_START_OF_THIS_MONTH_",
    StartOfNextMonth = "_START_OF_NEXT_MONTH_",
    StartOfLastMonth = "_START_OF_LAST_MONTH_",
    StartOfThisQuarter = "_START_OF_THIS_QUARTER_",
    StartOfNextQuarter = "_START_OF_NEXT_QUARTER_",
    StartOfLastQuarter = "_START_OF_LAST_QUARTER_",
    StartOfThisYear = "_START_OF_THIS_YEAR_",
    StartOfNextYear = "_START_OF_NEXT_YEAR_",
    StartOfLastYear = "_START_OF_LAST_YEAR_",
    ThreeDaysAgo = "_THREE_DAYS_AGO_",
    ThirtyDaysAgo = "_THIRTY_DAYS_AGO_",
    NinetyDaysAgo = "_NINETY_DAYS_AGO_",
    SixMonthsAgo = "_SIX_MONTHS_AGO_"
}
export declare const DEFAULT_DATE_FORMAT = "yyyy-MM-dd";
export declare class RichDate {
    value: Date | RelativeDate;
    format: string;
    constructor(value?: Date | RelativeDate, format?: string);
    static fromString(formattedValue: string, format?: string): RichDate;
    isRelative(): boolean;
    toString(): string;
    resolve(): Date;
}
export declare const RELATIVE_DATES: Record<string, RelativeDate>;
export type RelativeRange = {
    start: RelativeDate;
    end: RelativeDate;
};
export declare const RELATIVE_RANGES: Record<string, RelativeRange>;
//# sourceMappingURL=rich_date.d.ts.map